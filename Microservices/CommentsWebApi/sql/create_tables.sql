

CREATE TABLE IF NOT EXISTS public."Users"
(
    "Email" text COLLATE pg_catalog."default" NOT NULL,
    "Password" character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    "Username" text COLLATE pg_catalog."default" NOT NULL,
    "AccessLevel" integer NOT NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Email"),
    CONSTRAINT email_constraint CHECK ("Email" ~~ '%_@__%.__%'::text),
    CONSTRAINT name_constraint CHECK (length("Username") >= 2),
    CONSTRAINT password_constraint CHECK (length("Password"::text) >= 8)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Users"
    OWNER to postgres;
-- Index: IX_Users_Email

-- DROP INDEX IF EXISTS public."IX_Users_Email";

CREATE UNIQUE INDEX IF NOT EXISTS "IX_Users_Email"
    ON public."Users" USING btree
    ("Email" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;


CREATE TABLE IF NOT EXISTS public."Comments"
(
    "CommentID" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "DogID" integer NOT NULL,
    "UserEmail" text COLLATE pg_catalog."default",
    "Text" text COLLATE pg_catalog."default" NOT NULL,
    "Rating" integer NOT NULL,
    "VoteCounts" integer NOT NULL DEFAULT 0,
    "DateTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Comments" PRIMARY KEY ("CommentID"),
    CONSTRAINT "FK_Comments_Users_UserEmail" FOREIGN KEY ("UserEmail")
        REFERENCES public."Users" ("Email") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT dogid_constraint CHECK ("DogID" >= 0),
    CONSTRAINT ratingconstraint CHECK ("Rating" >= 1 AND "Rating" <= 5),
    CONSTRAINT text_constraint CHECK (length("Text") >= 1)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Comments"
    OWNER to postgres;
-- Index: IX_Comments_UserEmail

-- DROP INDEX IF EXISTS public."IX_Comments_UserEmail";

CREATE INDEX IF NOT EXISTS "IX_Comments_UserEmail"
    ON public."Comments" USING btree
    ("UserEmail" COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;